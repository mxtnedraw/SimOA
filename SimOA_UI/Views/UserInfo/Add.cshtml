@model SimOA_Model.UserInfo

@{
    Layout = null;
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <title>添加用户</title>
    <link href="~/Content/themes/default/easyui.css" rel="stylesheet" />
    <script src="~/Scripts/jquery-1.7.1.min.js"></script>
    <script src="~/Scripts/jquery.unobtrusive-ajax.min.js"></script>
    <script src="~/Scripts/jquery.easyui.min.js"></script>
    <script src="~/Scripts/easyui-lang-zh_CN.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/md5.js"></script>
    <style type="text/css">
        .tb {
            width: 150px;
            margin: 10px 0;
            padding: 5px 4px;
            border: 1px solid #95B8E7;
            box-sizing: border-box;
        }
    </style>
    <script type="text/javascript">

        $.extend($.fn.validatebox.defaults.rules, {
            rgx: {
                validator: function (value) {
                    var flag = false;
                    var rgxSpe = /[^a-zA-Z0-9\-_]+/;
                    if (!rgxSpe.test(value)) {
                        flag = true;
                    }
                    return flag;
                },
                message: '包含非法字符，不能包含除字母、数字、_、-以外的字符'
            },
            uni: {
                validator: function (value) {
                    var flag = false;
                    $.ajax({
                        url: '@Url.Action("CheckExist","UserInfo")', data: { uName: value }, async: false, dataType: 'text', success: function (data) {
                            if (data == "ok") {
                                flag = true;
                            }
                        }
                    })
                    return flag;
                },
                message: '用户名已存在'
            },
            equals: {
                validator: function (value, param) {
                    return value == $(param[0]).val();
                },
                message: '两次密码不一致'
            }
        });

        function subForm() {
            $('#addForm').form('submit', {
                onSubmit: function () {
                    var isValid = $(this).form('validate');
                    if (isValid) {
                        $("#Password").val(hex_md5($("#Password").val()));
                    }
                    return isValid;	// 返回false终止表单提交
                },
                success: function (data) {
                    //子窗体调用父窗体中的方法。
                    window.parent.afterAdd(data);
                },
                onLoadError: function (data) {
                    handlePwd();
                }
            });
        }
        function handlePwd() {
            $("#Password").val("");
        }
        //function afterAdd(data) {

        //}
    </script>
</head>
<body style="font-size: 14px; width: 478px;">
    @using (Ajax.BeginForm("Add", "UserInfo", new { }, new AjaxOptions() { }, new { id = "addForm" }))
    {
        <div>
            &nbsp;&nbsp;&nbsp;@Html.LabelFor(model => model.Username, " 用户名：")
            @Html.TextBoxFor(model => model.Username, new { @class = "easyui-validatebox tb", data_options = "required:true,validType:['length[6,16]','rgx','uni'],delay:50000,tipPosition:'left',validateOnCreate:false,validateOnBlur:true" })
        </div>
        <div>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Html.LabelFor(model => model.Password, "密码：")
            @Html.PasswordFor(model => model.Password, new { @class = "easyui-validatebox tb", data_options = "required:true,validType:['length[6,16]','rgx'],delay:50000,tipPosition:'left',validateOnCreate:false,validateOnBlur:true" })
        </div>
        <div>
            <label for="rpwd">确认密码：</label>
            <input id="rpwd" type="password" class="easyui-validatebox tb" data-options = "required:true,validType:{length:[6,16],rgx:[],equals:['#Password']},delay:50000,tipPosition:'left',validateOnCreate:false,validateOnBlur:true" />
        </div>

        <div>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;@Html.LabelFor(model => model.Remark, "备注：")
            @Html.TextBoxFor(model => model.Remark, new { @class = "easyui-validatebox tb" })
        </div>
    }


</body>
</html>
